<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd
        http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd
        http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.1.xsd
        http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp-2.1.xsd
        ">
    
    <bean id="jsonConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter"/>
    
    <!-- STORAGE -->
    <cloud:data-source id="sqlDataSource" >
        <cloud:pool pool-size="5-10" max-wait-time="2000" />
    </cloud:data-source>

    <jdbc:initialize-database data-source="sqlDataSource">
        <jdbc:script location="classpath:resources/acl.sql"/>
    </jdbc:initialize-database>

    <!-- SERVICE BUS -->
    <cloud:rabbit-connection-factory id="connectionFactory"/>
	<rabbit:admin id="amqpAdmin" connection-factory="connectionFactory"/>
    
    <!-- Set up the AmqpTemplate/RabbitTemplate: -->
    <rabbit:template id="amqpTemplate"
    	connection-factory="connectionFactory"
    	message-converter="jsonConverter" />

    <!-- Global input queue, bound to the exchange -->
    <rabbit:queue id="input_queue" name="input_queue" durable="false" />

    <!-- Master -> Slave exchange -->
    <rabbit:fanout-exchange id="sink" name="itsociety_sink"
    	durable="false">   
        <rabbit:bindings>
            <rabbit:binding queue="input_queue" />
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!-- SPRING INTEGRATION PART STARTS HERE -->
    <int:channel id="input_channel">
        <int:dispatcher task-executor="messageChannelTaskExecutor"/>
    </int:channel>

    <bean id="messageChannelTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="daemon" value="false"/>
    </bean>
    
    <int-amqp:inbound-channel-adapter id="input_adapter"
        channel="input_channel" queue-names="input_queue"
        connection-factory="connectionFactory"
        message-converter="jsonConverter" />
        
    <bean id="decider" class="it.cefriel.itsociety.security.AuthorizationDecider">
        <property name="rejected_channel" value="bad_channel"/>
        <property name="authorized_channel" value="good_channel"/>
        <property name="db" value="sqlDataSource"/>
    </bean>
    
    <bean id="auth_executor" class="it.cefriel.itsociety.security.Executor"/>
        
    
    <int:channel id="good_channel"
    	datatype="org.springframework.amqp.core.Message" />
    <int-amqp:publish-subscribe-channel id="bad_channel"
    	connection-factory="connectionFactory" exchange="itsociety_sink" />

    <int:service-activator input-channel="good_channel" method="exec"
    	ref="auth_executor" />

    <int:router resolution-required="true" input-channel="input_channel"
    	ref="decider" method="check_authorization">
    </int:router>


</beans>
